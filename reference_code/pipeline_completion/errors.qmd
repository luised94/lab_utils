# %||% is non-function
Error in guides$setup(scales, aesthetics, default = params$guide_default %||%  :
attempt to apply non-function

Need to load particular library to prevent conflicts. I remembered I had dealt with this before. ggplot2 3.3.0 is required to avoid the conflict. I was sure that 3.5.1 had worked but maybe I misremembered. ggcyto has a minimal requirement for ggplot2.

```{r}
renv::remove("ggplot2")
renv::install("ggplot2@3.3.0")
```
## References:
1. https://www.perplexity.ai/search/archive-flowcore-ggcyto-ggplot-_ZkE955bSoeQRacvinaf_g
# deprecated arguments in ggplot2
Warning messages:
1: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
? Please use `linewidth` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
2: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.
? Please use the `linewidth` argument instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
3: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.
? Please use the `linewidth` argument instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.

Just replace the arguments.
could use previously encountered errors as context.
# Grouping data while using the wrong column names
Error in `group_by()` at dplyr/R/summarise.R:128:3:
? In argument: `across(all_of(c(CONTROL_COLUMNS, "timepoints")))`.
Caused by error in `across()`:
? In argument: `all_of(c(CONTROL_COLUMNS, "timepoints"))`.
Caused by error in `all_of()` at rlang/R/eval-tidy.R:121:3:
! Can't subset elements that don't exist.
? Element `suppressor_allele` doesn't exist.
Run `rlang::last_trace()` to see where the error occurred.
There were 50 or more warnings (use warnings() to see the first 50)

# trying to paste factors with separators
do.call(paste, lapply(current_condition_df[target_comparison_columns], as.character), collap
Error in do.call(paste, lapply(current_condition_df[target_comparison_columns],  :
  unused argument (collapse = ".")

Pass the parameters together with c() to the args parameter for do.call
# subscript contains invalid names
Error: subscript contains invalid names
Was using character to subset an object. Needs to be a number.

# Loading from file with multiple genome ranges
Warning message:
In .merge_two_Seqinfo_objects(x, y) :
The 2 combined objects have no sequence levels in common. (Use
suppressWarnings() to suppress this warning.)

I forgot that the import has to be with the proper names for the chromosomes.

# using exists on character vector
Error in exists(required_configuration_variables) :
  first argument has length > 1
Need to use sapply(required_configuration_variables, exists)

# pattern matching error
```{error}
Error in gsub(pattern = GENOME_TRACK_CONFIG$file_sample_id, replacement = "\\1",  :
  invalid regular expression 'consolidated_([0-9]{4,5,6})_sequence\.fastq', reason 'Invalid contents of {}'
In addition: Warning message:
In gsub(pattern = GENOME_TRACK_CONFIG$file_sample_id, replacement = "\\1",  :
  TRE pattern compilation error 'Invalid contents of {}'
"consolidated_([0-9]{4}|[0-9]{5}|[0-9]{6})_sequence\\.fastq"
```

# column mismatch due to format key misassignment
```{error}
Error in `[.data.frame`(xls_peak_df, , meta_cols, drop = FALSE) :
  undefined columns selected
```

xls_peak_df had an NA column. Turns out format key was not being assigned correctly because the regex was not working. Going with the simpler one (just --call-summits) worked but another variation worked as well:
```{r}
any(grepl("^#\\s*Command:?.*--call-summits\\b", 
          file_lines[1:max(comment_lines)], 
          ignore.case = TRUE))
```

# file had missing data after macs2 call
```{error}
3: In `[<-.data.frame`(`*tmp*`, row_index, , value = list(sample_id = "input001",  :
  provided 6 variables to replace 5 variables
4: In eval(ei, envir) :
  File has no data after comments: /home/luised94/data/preprocessing_test/peaks/input_001_raw_deduped_blFiltered_withInput_narrow_peaks.xls
5: In `[<-.data.frame`(`*tmp*`, row_index, , value = list(sample_id = "input001",  :
  provided 6 variables to replace 5 variables
```

Macs2 peak calling used the same file as control. Seems like it worked.
Second, I forgot to fix the preallocation of the summary_statistics_df when I added the percent_recovered and percent_enriched stats. The summary_statistics_df only had the overlap_pct.
Indeed, after fixing the preallocation, we only get:
```{error}
2: In eval(ei, envir) :
  File has no data after comments: /home/luised94/data/preprocessing_test/peaks/input_001_raw_deduped_blFiltered_shifted_withInput_narrow_peaks.xls
3: In eval(ei, envir) :
  File has no data after comments: /home/luised94/data/preprocessing_test/peaks/input_001_raw_deduped_blFiltered_withInput_narrow_peaks.xls
```
And after fixing some errors later in the coding session:
```{error}
2: In eval(ei, envir) :
  File has no data after comments: /home/luised94/data/preprocessing_test/peaks/input_001_raw_deduped_blFiltered_shifted_withInput_broad_peaks.xls
3: In eval(ei, envir) :
  File has no data after comments: /home/luised94/data/preprocessing_test/peaks/input_001_raw_deduped_blFiltered_shifted_withInput_narrow_peaks.xls
4: In eval(ei, envir) :
  File has no data after comments: /home/luised94/data/preprocessing_test/peaks/input_001_raw_deduped_blFiltered_withInput_broad_peaks.xls
5: In eval(ei, envir) :
  File has no data after comments: /home/luised94/data/preprocessing_test/peaks/input_001_raw_deduped_blFiltered_withInput_narrow_peaks.xls
```

# assigning wrong number of values
```{error}
Error in `$<-.data.frame`(`*tmp*`, "percent_recovered", value = c(NA,  :
  replacement has 6 rows, data has 112

    summary_statistics_df$sample_id[row_index] <- current_sample_id
    summary_statistics_df$num_peaks[row_index] <- 0
    summary_statistics_df$width_mean[row_index] <- NA
    summary_statistics_df$width_median[row_index] <- NA
    summary_statistics_df$percent_recovered[row_index] <- NA
    summary_statistics_df$percent_enriched[row_index] <- NA
    # Create minimal placeholder data for distributions
    chromosome_distribution_list[[row_index]] <- data.frame(
      sample_id = current_sample_id,
      chromosome = NA,
      count = NA,
      stringsAsFactors = FALSE
    )
    peak_width_list[[row_index]] <- data.frame(
      sample_id = current_sample_id,
      peak_id = NA,
      width = NA
    )
```

Not sure why they were being assigned as six. Converted to single values and row assignment and using NA specific types (NA_real_)
# unexpected if
```{error}
Error in source("pipeline_completion/analyze_peak_files.R") :
  pipeline_completion/analyze_peak_files.R:345:3: unexpected 'if'
344:   # Check if file has content after comments
345:   if
```

Usually caused by missing brackets of a function or conditional I think
# subsetting dataframe
```{error}
> subset(final_metadata, eval(comparison$filter, envir = final_metadata))
Error in subset.data.frame(final_metadata, eval(comparison$filter, envir = final_metadata)) :
  'subset' must be logical
```


# macs2 not enough peaks for model building
```{error}
WARNING @ Tue, 22 Apr 2025 15:26:17: Too few paired peaks (80) so I can not build the model! Broader your MFOLD range parameter may erase this error. If it still can't build the model, we suggest to use --nomodel and --extsize 147 or other fixed number instead.
WARNING @ Tue, 22 Apr 2025 15:26:17: Process for pairing-model is terminated!
WARNING @ Tue, 22 Apr 2025 15:26:17: # Can't find enough pairs of symmetric peaks to build model!
```

Samples with poor quality data or negative controls can give this error. Extend mfold for model building or disable extsize. 
See: https://claude.ai/chat/401ce71b-31dc-4ae0-92a7-ba69724ecfb8

# macs2 does not recognize the parameter
Control was being passed from associated array as "--control ${INPUT_CONTROL}" whereas it needed to be ( --control ${INPUT_CONTROL}) as a separate argument.

# Variable never defined or doesnt exist.
```{error}
Error in args$skip_validation :
  object of type 'closure' is not subsettable

Error in dir.exists(GENOME_TRACK_CONFIG$file_genome_directory) :
  object 'GENOME_TRACK_CONFIG' not found
```

# Missing or extra characters
```{error}
Error in source("reference_code/pipeline_completion/plot_bigwig_files.R") :
  reference_code/pipeline_completion/plot_bigwig_files.R:30:74: unexpected ','
29: # Ensure supplementary files for plotting genome tracks are present
30: FILE_GENOME_DIRECTORY <- file.path(Sys.getenv("HOME"), "data", "REFGENS"),
```

# Dataframe assignment
```{error}
Error in `[<-.data.frame`(`*tmp*`, row_index, , value = c("input", "deduped",  :
  replacement has 3 items, need 4
```

bigwig_metadata_df[row_index, ] <- split_metadata[[row_index]]
Add NA using: c(split_metadata[[row_index]], NA)
This will add a column named NA as well.
Can also do:
bigwig_metadata_df[row_index, 1:3] <- split_metadata[[row_index]]

If the split metadata were to change, I can calculate length of elements being assigned and adjust the dimensions to subset the dataframe columns while the data is being assigned. I would have to ensure that it is unique or adjust dynamically based on the row.

# Crazy error when assigning some values to a dataframe inside a for loop

```{r}
summary_statistics_df <- data.frame(
  sample_id = character(MAX_ROW_COUNT),
  file_path = character(MAX_ROW_COUNT),
  num_peaks = integer(MAX_ROW_COUNT),
  percent_recovered = numeric(MAX_ROW_COUNT),
  percent_enriched = numeric(MAX_ROW_COUNT),
  width_mean = numeric(MAX_ROW_COUNT),
  width_median = numeric(MAX_ROW_COUNT),
  stringsAsFactors = FALSE
)

for (row_index in seq_len(MAX_ROW_COUNT)) {
#....
  summary_statistics_df[row_index, ] <- data.frame(
    sample_id = current_sample_id,
    file_path = xls_file_path,
    num_peaks = number_of_peaks,
    width_mean = mean(peak_widths),
    width_median = median(peak_widths),
    percent_recovered = current_percent_recovered,
    percent_enriched = current_percent_enriched,
    stringsAsFactors = FALSE
  )
#....
}
```
The assigment does not occur by name!!!! 
Deepseek would have fixed it without knowing but o4-mini detected it.
When you assign a data.frame to a slice of another data.frame (df[row, ] <- newrow_df), R drops names and lines up columns by position. Your RHS columns
(., width_mean, width_median, percent_recovered, percent_enriched)
don't match the LHS slots
(., percent_recovered, percent_enriched, width_mean, width_median),
so everything shifts, placing a mean width (often hundreds of bases) into the percent_recovered column and blowing past 100.

Solutions:
1) Reorder during the assignment
2) Enforce order during initialization
3) Assign with for loop or by names

# ggplot2 shapes
```{r}
Warning message:
Using shapes for an ordinal variable is not advised
```
